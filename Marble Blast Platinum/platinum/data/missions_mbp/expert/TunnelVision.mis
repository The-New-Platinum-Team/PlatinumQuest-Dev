// UT Tip: Just one maze to solve.
// Rep. by Phil
//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         game = "Platinum";
         type = "Expert";
         ultimateTime = "30000";
         ultimateHint = "Just one maze to solve.";
         easterEggHint = "Change gravity and go outside the pipes. The egg should be in sight.";
         artist = "Matan rep. Phil";
         music = "Seaside Revisited.ogg";
         desc = "Not one but two mazes to solve!";
         goldTime = "60000";
         name = "Tunnel Vision";
         level = "2";
         startHelpText = "Pipes just got ugly...";
   };
   new MissionArea(MissionArea) {
      area = "-360 -648 720 1296";
      flightCeiling = "300";
      flightCeilingRange = "20";
         locked = "true";
   };
   new Sky(Sky) {
      position = "336 136 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      cloudHeightPer[0] = "0";
      cloudHeightPer[1] = "0";
      cloudHeightPer[2] = "0";
      cloudSpeed1 = "0.0001";
      cloudSpeed2 = "0.0002";
      cloudSpeed3 = "0.0003";
      visibleDistance = "500";
      useSkyTextures = "1";
      renderBottomTexture = "1";
      SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
      fogDistance = "300";
      fogColor = "0.600000 0.600000 0.600000 1.000000";
      fogVolume1 = "-1 -1.73483e+09 -1.73483e+09";
      fogVolume2 = "-1 -1.73483e+09 -1.73483e+09";
      fogVolume3 = "-1 -1.73483e+09 -1.73483e+09";
      materialList = "~/data/skies/Expert/Expert_Sky.dml";
      windVelocity = "1 0 0";
      windEffectPrecipitation = "0";
      noRenderBans = "1";
      fogVolumeColor1 = "128.000000 128.000000 128.000000 -1734829824.000000";
      fogVolumeColor2 = "128.000000 128.000000 128.000000 -1734829824.000000";
      fogVolumeColor3 = "128.000000 128.000000 128.000000 -1734829824.000000";
   };
   new Sun() {
      direction = "0.638261 0.459006 -0.61801";
      color = "0.700000 0.700000 0.700000 1.000000";
      ambient = "0.100000 0.100000 0.200000 1.000000";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_MBP/TunnelVision.dif";
      showTerrainInside = "0";
   };
   new Item() {
      position = "-24 52 7.45";
      rotation = "1 0 0 180";
      scale = "0.7 0.7 0.7";
      dataBlock = "GemItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "-27 61 10.75";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "TimeTravelItem";
      collideable = "0";
      static = "1";
      rotate = "1";
         timeBonus = "5000";
   };
   new Item() {
      position = "-21 49 11.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "TimeTravelItem";
      collideable = "0";
      static = "1";
      rotate = "1";
         timeBonus = "5000";
   };
   new Item() {
      position = "0 86 0.95";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "AntiGravityItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "0 8.6 6.8";
      rotation = "1 0 0 180";
      scale = "1 1 1";
      dataBlock = "AntiGravityItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new StaticShape(StartPoint) {
      position = "0 3 0.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "StartPad";
   };
   new StaticShape(EndPoint) {
      position = "0 3 0.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "EndPad";
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "0 92 7.75";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "1000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "0 92 9.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "4000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "-24 64 12";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "4000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "-48 92 7.75";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "3";
            msToNext = "0";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "0 92 7";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "4.0000000 4.0000000 0.5000000 -8.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 -8.0000000 0.0000000";
            targetTime = "90000";
            IContinueToTTime = "0";
            instant = "0";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = "platinum/data/interiors_MBP/TunnelVision.dif";
         interiorIndex = "0";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "-24 92 7.75";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "1000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "-24 92 9.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "4000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "-24 52 12.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "4000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "16 52 7.75";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "3";
            msToNext = "4000";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "-24 92 7";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "4.0000000 4.0000000 0.5000000 -8.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 -8.0000000 0.0000000";
            targetTime = "90000";
            IContinueToTTime = "0";
            instant = "0";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = "platinum/data/interiors_MBP/TunnelVision.dif";
         interiorIndex = "1";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new Trigger(Bounds) {
      position = "-86 115.4 -6";
      rotation = "1 0 0 0";
      scale = "125 125 40";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new StaticShape() {
      position = "0.357414 3.35828 4.57225";
      rotation = "1 0 0 0";
      scale = "0.6 0.6 0.6";
      dataBlock = "SignFinish";
   };
   new Trigger(oob9) {
      position = "-28.8171 56.5323 4";
      rotation = "1 0 0 0";
      scale = "9 9 0.1";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob1) {
      position = "-3.4 45.2 0.65";
      rotation = "1 0 0 0";
      scale = "7 12 3";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob2) {
      position = "-27.4 47.6 0.5";
      rotation = "1 0 0 0";
      scale = "7 13 3";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob3) {
      position = "-39 55.7 0.6";
      rotation = "1 0 0 0";
      scale = "7 7 7";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob4) {
      position = "-14.2 79.5 1";
      rotation = "1 0 0 0";
      scale = "6 7 6";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob5) {
      position = "-42.1714 79.4196 3.9438";
      rotation = "1 0 0 0";
      scale = "12 7 4";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob6) {
      position = "-18.0008 31.4834 4.4";
      rotation = "1 0 0 0";
      scale = "12 7 3";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob7) {
      position = "-18.4 55.4 4.3";
      rotation = "1 0 0 0";
      scale = "12 7 3";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Trigger(oob8) {
      position = "-3.7 70.4 4.33";
      rotation = "1 0 0 0";
      scale = "7 12 3";
      dataBlock = "OutOfBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new SimGroup(PathNodeGroup) {

      new StaticShape(CameraPath1) {
         position = "19.51509 -14.9388 42.21549";
         rotation = "0.7093208 0.2129441 -0.6719515 48.14742";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "4500";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath2";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath2) {
         position = "-1.503852 -9.807669 32.54851";
         rotation = "0.8729943 0.1426989 -0.4663883 38.62895";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "5500";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath3";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath3) {
         position = "-21.50638 1.384081 22.98968";
         rotation = "0.9958694 0.02482887 -0.08733747 31.86445";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "0";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath4";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath4) {
         position = "-19.14797 77.9629 3.05568";
         rotation = "-0.00599731 -0.03019498 0.999526 202.4573";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "2500";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath5";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath5) {
         position = "-22.87911 73.91516 2.936176";
         rotation = "0.0001372623 0.007190606 0.9999742 182.1871";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "3000";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath6";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath6) {
         position = "-25.95589 68.06182 3.24992";
         rotation = "-0.003891882 0.05701368 0.9983658 172.2026";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "3750";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath7";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath7) {
         position = "-26.09946 59.11076 4.843081";
         rotation = "-0.01755985 0.1264818 0.9918135 164.3198";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "2500";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath8";
            placed = "1";
            useRotation = "1";
      };
      new StaticShape(CameraPath8) {
         position = "-26.09946 59.11076 4.843081";
         rotation = "-0.01755985 0.1264818 0.9918135 164.3198";
         scale = "1 1 1";
         dataBlock = "PathNode";
            timeToNext = "0";
            usePosition = "1";
            reverseRotation = "0";
            useScale = "0";
            nextNode = "CameraPath1";
            placed = "1";
            useRotation = "1";
      };
   };
   new Item() {
      position = "-24 52 -1.8";
      rotation = "1 0 0 0";
      scale = "1 1 1.3";
      dataBlock = "easterEgg";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new AudioProfile(MusicProfile) {
      fileName = "~/data/sound/music/Pianoforte (Guitar Remix).ogg";
      description = "AudioMusic";
      preload = "0";
   };
};
//--- OBJECT WRITE END ---
