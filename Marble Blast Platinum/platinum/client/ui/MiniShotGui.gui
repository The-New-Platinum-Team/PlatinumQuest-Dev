//-----------------------------------------------------------------------------
// Copyright (c) 2021 The Platinum Team
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
//-----------------------------------------------------------------------------

//--- OBJECT WRITE BEGIN ---
new GuiControl(MiniShotGui) {
	profile = "GuiDefaultProfile";
	horizSizing = "width";
	vertSizing = "height";
	position = "0 0";
	extent = "640 480";
	minExtent = "8 8";
	visible = "1";
	helpTag = "0";
	noCursor = "1";

	new GameTSCtrl(Minishotter) {
		profile = "GuiDefaultProfile";
		horizSizing = "right";
		vertSizing = "bottom";
		position = "0 0";
		extent = "229 179";
		minExtent = "8 8";
		visible = "1";
		helpTag = "0";
		cameraZRot = "0";
		forceFOV = "0";
	};
};
//--- OBJECT WRITE END ---

function doMiniShot(%cb) {
	if (!$Game::Running) {
		eval(%cb);
		return;
	}

	// if in lbs or in editor, disable.
	if (!$Editor::Opened) {
		eval(%cb);
		return;
	}

	%scale = 4;//Because screenshots aren't anti-aliased and they look stupid when small
	%imgWidth = 96 * %scale;
	%imgHeight = 70 * %scale;
	%imgFov = 105;

	if (getWord(getResolution(), 0) < %imgWidth || getWord(getResolution(), 1) < %imgHeight) {
		setResolution(%imgWidth, %imgHeight, 32);
	}

	RootGui.setContent(MiniShotGui);
	Minishotter.resize(0, 0, %imgWidth, %imgHeight);
	Minishotter.forceFOV = %imgFov;
	Canvas.repaint();
	schedule(200, 0, "doMiniShotTakeScreenshot", %imgWidth, %imgHeight, %cb);

}

function doMiniShotTakeScreenshot(%imgWidth, %imgHeight, %cb) {
	screenShotRegion(filePath($Server::MissionFile) @ "/" @ fileBase($Server::MissionFile) @ ".png", %imgWidth, %imgHeight, %imgWidth, %imgHeight);
	schedule(150, 0, "doMiniShotEnd", %cb);
}

function doMiniShotEnd(%cb) {
	RootGui.setContent(PlayGui);
	eval(%cb);
}

function doBigShot() {
	if (!$Game::Running)
		return;
	if (!$Editor::Opened)
		return;

	Minishotter.resize(0, 0, getWord(getResolution(), 0), getWord(getResolution(), 1));
	Canvas.repaint();
	screenShot(filePath($Server::MissionFile) @ "/" @ fileBase($Server::MissionFile) @ ".png", getWord(getResolution(), 0), getWord(getResolution(), 1));
}
