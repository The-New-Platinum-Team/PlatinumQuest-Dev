//-----------------------------------------------------------------------------
// Copyright (c) 2021 The Platinum Team
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//-----------------------------------------------------------------------------

//--- OBJECT WRITE BEGIN ---
new GuiBitmapCtrl(OptionsTexturePackDlg) {
	profile = "GuiDefaultProfile";
	horizSizing = "right";
	vertSizing = "bottom";
	position = "0 0";
	extent = "800 600";
	minExtent = "8 8";
	visible = "1";
	helpTag = "0";
	bitmap = "./exit/black";
	wrap = "0";
	commandCancel = "OptionsTexturePackDlg.close();";
	commandNameCancel = "Close";
	defaultControl = "OTPD_Pack0";

	new GuiControl() {
		profile = "PQWindowProfile";
		horizSizing = "center";
		vertSizing = "center";
		position = "129 112";
		extent = "741 476";
		minExtent = "61 61";
		visible = "1";
		helpTag = "0";

		new GuiBorderButtonCtrl() {
			profile = "PQButtonProfile";
			horizSizing = "center";
			vertSizing = "top";
			position = "223 404";
			extent = "94 45";
			minExtent = "8 8";
			visible = "1";
			command = "OptionsTexturePackDlg.close();";
			helpTag = "0";
			text = "Close";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiMLTextCtrl() {
			profile = "GuiMLTextProfile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "66 22";
			extent = "409 32";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
			defaultText = "<bold:28><just:center>Texture Packs";
			unformattedText = "<bold:28><just:center>Texture Packs";
		};
		new GuiControl() {
			profile = "PQPanelProfile";
			horizSizing = "width";
			vertSizing = "height";
			position = "23 53";
			extent = "305 356";
			minExtent = "41 41";
			visible = "1";
			helpTag = "0";

			new GuiScrollCtrl(OTPD_PackList) {
				profile = "PQScrollProfile";
				horizSizing = "width";
				vertSizing = "height";
				position = "13 44";
				extent = "279 299";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				willFirstRespond = "1";
				hScrollBar = "dynamic";
				vScrollBar = "dynamic";
				constantThumbHeight = "0";
				childMargin = "2 2";

				new GuiControl(OTPD_PackListContent) {
					profile = "GuiDefaultProfile";
					horizSizing = "width";
					vertSizing = "bottom";
					position = "2 2";
					extent = "275 16";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
				};
			};
			new GuiMLTextCtrl() {
				profile = "GuiMLTextProfile";
				horizSizing = "center";
				vertSizing = "bottom";
				position = "25 14";
				extent = "202 24";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				lineSpacing = "2";
				allowColorChars = "0";
				maxChars = "-1";
				defaultText = "<bold:24><just:center>Available";
				unformattedText = "<bold:24><just:center>Available";
			};
		};
		new GuiControl() {
			profile = "PQPanelProfile";
			horizSizing = "left";
			vertSizing = "height";
			position = "318 53";
			extent = "401 356";
			minExtent = "41 41";
			visible = "1";
			helpTag = "0";

			new GuiScrollCtrl(OTPD_ActiveList) {
				profile = "PQScrollProfile";
				horizSizing = "width";
				vertSizing = "height";
				position = "13 44";
				extent = "375 299";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				willFirstRespond = "1";
				hScrollBar = "dynamic";
				vScrollBar = "dynamic";
				constantThumbHeight = "0";
				childMargin = "2 2";

				new GuiControl(OTPD_ActiveListContent) {
					profile = "GuiDefaultProfile";
					horizSizing = "width";
					vertSizing = "bottom";
					position = "2 2";
					extent = "371 16";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
				};
			};
			new GuiMLTextCtrl() {
				profile = "GuiMLTextProfile";
				horizSizing = "center";
				vertSizing = "bottom";
				position = "25 14";
				extent = "202 24";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				lineSpacing = "2";
				allowColorChars = "0";
				maxChars = "-1";
				defaultText = "<bold:24><just:center>Active";
				unformattedText = "<bold:24><just:center>Active";
			};
		};
	};
};
//--- OBJECT WRITE END ---

function buildTexturePackArray() {
	if (isObject(TexturePackArray)) {
		TexturePackArray.delete();
	}
	Array(TexturePackArray);
	TexturePackArray.addEntry("Default" TAB "default");

	%spec = $userMods @ "/data/texture_packs/*/pack.json";
	for (%file = findFirstFile(%spec); %file !$= ""; %file = findNextFile(%spec)) {
		%ident = fileBase(filePath(%file));

		//Ignore default because we add it above
		if (%ident $= "default") {
			continue;
		}

		%pack = jsonParse(fread(%file));
		if (!isObject(%pack)) {
			continue;
		}
		//Ignore specials
		if (%pack.hidden) {
			continue;
		}
		//Duplicate
		if (TexturePackArray.containsEntryAtField(%ident, 1)) {
			continue;
		}

		//Name TAB value
		TexturePackArray.addEntry(%pack.name TAB %ident);
	}

	TexturePackArray.sort(SortTexturePack);
}

function SortTexturePack(%a, %b) {
	return stricmp(getField(%a, 0), getField(%b, 0)) < 0;
}

function OptionsTexturePackDlg::onWake(%this) {
	buildTexturePackArray();
	%this.buildLists();
}

function OptionsTexturePackDlg::close(%this) {
	RootGui.popDialog(%this);
}

function OptionsTexturePackDlg::buildLists(%this) {
	OTPD_PackListContent.clear();
	OTPD_ActiveListContent.clear();

	%availableCount = TexturePackArray.getSize();
	%activeCount = 0;

	for (%i = 0; $pref::Video::TexturePack[%i] !$= ""; %i ++) {
		%pref = $pref::Video::TexturePack[%i];
		%index = TexturePackArray.getIndexByField(%pref, 1);

		// TODO: If you loaded an invalid texture pack then clear it
		if (%index != -1) {
			%activeIndexes[%index] = true;
			%activePacks[%activeCount] = %pref;
			%activeCount ++;
			%availableCount --;
		}
	}

	%rowHeight = 37;

	// Figure out width first because apparently Torque won't do it for us
	%availableParentWidth = OTPD_PackListContent.getGroup().getWidth() - 4;
	%availableParentHeight = OTPD_PackListContent.getGroup().getHeight() - 4;
	OTPD_PackListContent.setWidth(%availableParentWidth - ((%availableCount * %rowHeight) > %availableParentHeight ? 16 : 0));

	%activeParentWidth = OTPD_ActiveListContent.getGroup().getWidth() - 4;
	%activeParentHeight = OTPD_ActiveListContent.getGroup().getHeight() - 4;
	OTPD_ActiveListContent.setWidth(%activeParentWidth - ((%activeCount * %rowHeight) > %activeParentHeight ? 16 : 0));

	%availableWidth = OTPD_PackListContent.getWidth();
	%activeWidth = OTPD_ActiveListContent.getWidth();

	OTPD_PackListContent.setHeight(%availableCount * %rowHeight);
	OTPD_ActiveListContent.setHeight(%activeCount * %rowHeight);

	for (%i = 0; %i < TexturePackArray.getSize(); %i ++) {
		%pack = TexturePackArray.getEntry(%i);

		%display = getField(%pack, 0);
		%name = getField(%pack, 1);

		%index = OTPD_PackListContent.getCount();
		%box = "OTPD_Pack" @ %index;
		%boxDown = "OTPD_Pack" @ (%index + 1);
		%boxUp = "OTPD_Pack" @ (%index - 1);
		%boxRight = "OTPD_Active0"; // Just go to top
		%titleCtrl = "OTPD_Pack" @ %index @ "_Title";
		%activateButton = "OTPD_Pack" @ %index @ "_Activate";

		if (!%activeIndexes[%i]) {
			OTPD_PackListContent.add(new GuiControl(%box) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "0" SPC (%index * %rowHeight);
				extent = %availableWidth SPC %rowHeight;
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				commandSelect = "OptionsTexturePackDlg.activatePack(\"" @ expandEscape(%name) @ "\");";
				commandNameSelect = "Activate";
				controlDown = %boxDown;
				controlUp = %boxUp;
				controlRight = %boxRight;

				new GuiMLTextCtrl(%titleCtrl) {
					profile = "GuiMLTextProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "8 8";
					extent = "360 14";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";
				};
				new GuiBorderButtonCtrl(%activateButton) {
					profile = "PQButton26Profile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = (%availableWidth - 45) @ "-4";
					extent = "45 45";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					text = "+";
					command = "OptionsTexturePackDlg.activatePack(\"" @ expandEscape(%name) @ "\");";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				};
			});

			%titleCtrl.setText("<bold:20>" @ %display);
		}
	}

	for (%i = 0; %i < %activeCount; %i ++) {
		%pref = %activePacks[(%activeCount - 1) - %i];
		%pack = TexturePackArray.getEntryByField(%pref, 1);

		%display = getField(%pack, 0);
		%name = getField(%pack, 1);

		%index = OTPD_ActiveListContent.getCount();
		%box = "OTPD_Active" @ %index;
		%boxDown = "OTPD_Active" @ (%index + 1);
		%boxUp = "OTPD_Active" @ (%index - 1);
		%boxLeft = "OTPD_Pack0"; // Just go to top
		%titleCtrl = "OTPD_Active" @ %index @ "_Title";
		%deactivateButton = "OTPD_Active" @ %index @ "_Deactivate";
		%upButton = "OTPD_Active" @ %index @ "_Up";
		%downButton = "OTPD_Active" @ %index @ "_Down";

		if (!%activePacks[%pack]) {
			OTPD_ActiveListContent.add(new GuiControl(%box) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "0" SPC (%index * %rowHeight);
				extent = %activeWidth SPC %rowHeight;
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				commandSelect = "OptionsTexturePackDlg.deactivatePack(\"" @ expandEscape(%name) @ "\");";
				commandNameSelect = "Deactivate";
				controlDown = %boxDown;
				controlUp = %boxUp;
				controlLeft = %boxLeft;

				new GuiMLTextCtrl(%titleCtrl) {
					profile = "GuiMLTextProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "8 8";
					extent = "360 14";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";
				};
			});

			if (%name !$= "default") {
				%box.add(new GuiBorderButtonCtrl(%downButton) {
					profile = "PQButton26Profile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = (%activeWidth - 82) @ "-4";
					extent = "45 45";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					text = "v";
					command = "OptionsTexturePackDlg.movePackDown(\"" @ expandEscape(%name) @ "\");";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					bitmap = "platinum/client/ui/play/leftright";
					bitmapRotation = "270";
				});
				%box.add(new GuiBorderButtonCtrl(%upButton) {
					profile = "PQButton26Profile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = (%activeWidth - 119) @ "-4";
					extent = "45 45";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					text = "^";
					command = "OptionsTexturePackDlg.movePackUp(\"" @ expandEscape(%name) @ "\");";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					bitmap = "platinum/client/ui/play/leftright";
					bitmapRotation = "90";
				});
				%box.add(new GuiBorderButtonCtrl(%deactivateButton) {
					profile = "PQButton26Profile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = (%activeWidth - 45) @ "-4";
					extent = "45 45";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					text = "-";
					command = "OptionsTexturePackDlg.deactivatePack(\"" @ expandEscape(%name) @ "\");";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				});
				%downButton.setActive(%index < (%activeCount - 2)); // 1 for default
				%upButton.setActive(%index > 0);
				if (%index > 0) {
					%box.commandAlt1 = "OptionsTexturePackDlg.movePackUp(\"" @ expandEscape(%name) @ "\");";
					%box.commandNameAlt1 = "Move Up";
				}
				if (%index < (%activeCount - 2)) {
					%box.commandAlt2 = "OptionsTexturePackDlg.movePackDown(\"" @ expandEscape(%name) @ "\");";
					%box.commandNameAlt2 = "Move Down";
				}
			}

			%titleCtrl.setText("<bold:20>" @ %display);
		}
	}
}

function OptionsTexturePackDlg::activatePack(%this, %pack) {
	%found = false;
	for (%i = 0; $pref::Video::TexturePack[%i] !$= ""; %i ++) {
		%pref = $pref::Video::TexturePack[%i];
		if (%pref $= %pack) {
			%found = true;
		}
	}
	if (%found) {
		// Matan stop
		return;
	}
	$pref::Video::TexturePack[%i] = %pack;
	%this.buildLists();
	$Options::TexturePackDirty = true;
}

function OptionsTexturePackDlg::movePackDown(%this, %pack) {
	%found = false;
	for (%i = 0; $pref::Video::TexturePack[%i] !$= ""; %i ++) {
		%pref = $pref::Video::TexturePack[%i];
		if (%pref $= %pack) {
			%found = true;
			%index = %i;
		}
	}
	if (!%found) {
		// You know he's going to try it
		return;
	}

	%temp = $pref::Video::TexturePack[%index];
	$pref::Video::TexturePack[%index] = $pref::Video::TexturePack[%index - 1];
	$pref::Video::TexturePack[%index - 1] = %temp;
	%this.buildLists();
	$Options::TexturePackDirty = true;
}

function OptionsTexturePackDlg::movePackUp(%this, %pack) {
	%found = false;
	for (%i = 0; $pref::Video::TexturePack[%i] !$= ""; %i ++) {
		%pref = $pref::Video::TexturePack[%i];
		if (%pref $= %pack) {
			%found = true;
			%index = %i;
		}
	}
	if (!%found) {
		// Somehow he always does
		return;
	}

	%temp = $pref::Video::TexturePack[%index];
	$pref::Video::TexturePack[%index] = $pref::Video::TexturePack[%index + 1];
	$pref::Video::TexturePack[%index + 1] = %temp;
	%this.buildLists();
	$Options::TexturePackDirty = true;
}

function OptionsTexturePackDlg::deactivatePack(%this, %pack) {
	%found = false;
	for (%i = 0; $pref::Video::TexturePack[%i] !$= ""; %i ++) {
		%pref = $pref::Video::TexturePack[%i];
		if (%pref $= %pack) {
			%found = true;
			%index = %i;
		}
	}
	if (!%found) {
		// And then i have to fix it
		return;
	}

	// Delete by just moving everything else over it
	// Bonus points because this clears the last one (since the 1-past-last is empty)
	for (%i = %index; $pref::Video::TexturePack[%i] !$= ""; %i ++) {
		$pref::Video::TexturePack[%i] = $pref::Video::TexturePack[%i + 1];
	}
	%this.buildLists();
	$Options::TexturePackDirty = true;
}
