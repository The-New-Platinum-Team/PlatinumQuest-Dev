//-----------------------------------------------------------------------------
// Copyright (c) 2021 The Platinum Team
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//-----------------------------------------------------------------------------

//--- OBJECT WRITE BEGIN ---
new GuiControl(MPDownloadDlg) {
	profile = "GuiDefaultProfile";
	horizSizing = "right";
	vertSizing = "bottom";
	position = "0 0";
	extent = "640 480";
	minExtent = "8 8";
	visible = "1";
	helpTag = "0";

	new GuiControl(MPD_HostWindow) {
		profile = "PQWindowProfile";
		horizSizing = "center";
		vertSizing = "center";
		position = "54 41";
		extent = "532 397";
		minExtent = "41 41";
		visible = "1";
		helpTag = "0";

		new GuiBorderButtonCtrl() {
			profile = "PQButtonProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "220 325";
			extent = "94 45";
			minExtent = "8 8";
			visible = "1";
			command = "RootGui.popDialog(MPDownloadDlg); PlayMissionGui.showBody();";
			helpTag = "0";
			text = "Close";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiMLTextCtrl(MPDH_MissionInfo) {
			profile = "GuiMLTextProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "37 231";
			extent = "188 54";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
		new GuiMLTextCtrl(MPDH_Title) {
			profile = "GuiMLTextProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "27 27";
			extent = "479 36";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
		new GuiBitmapCtrl(MPDH_MissionPreview) {
			profile = "GuiDefaultProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "33 83";
			extent = "197 148";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			bitmap = "~/data/multiplayer/hunt/intermediate/MarbleItUp_Hunt";
			wrap = "0";
		};
		new GuiScrollCtrl() {
			profile = "GuiPhilScrollProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "234 141";
			extent = "266 156";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			willFirstRespond = "1";
			hScrollBar = "alwaysOff";
			vScrollBar = "dynamic";
			constantThumbHeight = "0";
			childMargin = "0 0";

			new GuiControl(MPDH_RestrictScroll) {
				profile = "GuiDefaultProfile";
				horizSizing = "width";
				vertSizing = "bottom";
				position = "0 0";
				extent = "266 8";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
			};
		};
		new GuiCheckBoxCtrl(MPDH_Enable) {
			profile = "PQCheckboxProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "233 85";
			extent = "156 26";
			minExtent = "8 8";
			visible = "1";
			command = "MPDownloadDlg.update();";
			helpTag = "0";
			text = "Enable Download";
			groupNum = "-1";
			buttonType = "ToggleButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiCheckBoxCtrl(MPDH_AllowAll) {
			profile = "PQCheckboxProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "396 85";
			extent = "101 26";
			minExtent = "8 8";
			visible = "1";
			command = "MPDownloadDlg.allowAll();";
			helpTag = "0";
			text = "Allow All";
			groupNum = "-1";
			buttonType = "ToggleButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiMLTextCtrl(MPDH_RestrictTitle) {
			profile = "GuiMLTextProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "234 117";
			extent = "272 27";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
	};
	new GuiControl(MPD_ClientWindow) {
		profile = "PQWindowProfile";
		horizSizing = "center";
		vertSizing = "center";
		position = "24 136";
		extent = "592 207";
		minExtent = "41 41";
		visible = "0";
		helpTag = "0";

		new GuiBorderButtonCtrl(MPDC_Download) {
			profile = "PQButtonProfile";
			horizSizing = "left";
			vertSizing = "bottom";
			position = "287 123";
			extent = "119 45";
			minExtent = "8 8";
			visible = "1";
			command = "MPDownloadDlg.startDownload();";
			helpTag = "0";
			text = "Download";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiBorderButtonCtrl(MPDC_Close) {
			profile = "PQButtonProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "187 123";
			extent = "94 45";
			minExtent = "8 8";
			visible = "1";
			command = "RootGui.popDialog(MPDownloadDlg); PlayMissionGui.showBody();";
			helpTag = "0";
			text = "Close";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiMLTextCtrl(MPDC_Title) {
			profile = "GuiMLTextProfile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "26 30";
			extent = "539 14";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
		new GuiMLTextCtrl(MPDC_Info) {
			profile = "GuiMLTextProfile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "26 87";
			extent = "539 14";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
	};
};
//--- OBJECT WRITE END ---

//-----------------------------------------------------------------------------
// Window Opening
//-----------------------------------------------------------------------------

function MPDownloadDlg::show(%this) {
	if ($Server::Hosting && !$Server::_Dedicated) {
		%this.showHost();
	} else {
		%this.showClient();
	}
}

function MPDownloadDlg::showHost(%this) {
	MPDH_Title.setText("<bold:32><just:center>Offer Mission for Download");
	MPDH_RestrictTitle.setText("<font:24><just:center>Restrict Access");
	MPDH_MissionInfo.setText("<font:24><just:center>" @ $MP::MissionObj.name NL "<just:left>Size:<just:right>Loading...");
	MPDH_MissionPreview.setBitmap(filePath($MP::MissionFile) @ "/" @ fileBase($MP::MissionFile));

	MPD_HostWindow.setVisible(true);
	MPD_ClientWindow.setVisible(false);

	RootGui.pushDialog(MPDownloadDlg);

	%this.fo = "";
	%this.readFile();

	%this.setupPlayers();

	%this.updating = true;
	MPDH_Enable.setValue($MP::CanDownloadMission[$MP::MissionFile]);
	%this.updating = false;
}

function MPDownloadDlg::showClient(%this) {
	MPDC_Title.setText("<bold:32><just:center>Download Mission");

	MPD_HostWindow.setVisible(false);
	MPD_ClientWindow.setVisible(true);

	RootGui.pushDialog(MPDownloadDlg);
}

//-----------------------------------------------------------------------------
// Host Window
//-----------------------------------------------------------------------------

function MPDownloadDlg::readFile(%this) {
	if (%this.fo $= "") {
		%this.fo = new FileObject();
		if (!%this.fo.openForRead($MP::MissionFile)) {
			MPDH_MissionInfo.setText("<font:24><just:center>" @ $MP::MissionObj.name NL "<just:left>Size:<just:right>Error");
			%this.fo.close();
			%this.fo.delete();
			%this.fo = "";
			return;
		}

		%this.fileSize = 0;
	}

	%next = %this.fileSize + 250;

	while (%this.fileSize < %next && !%this.fo.isEOF())
		%this.fileSize += strlen(%this.fo.readLine());

	MPDH_MissionInfo.setText("<font:24><just:center>" @ $MP::MissionObj.name NL "<just:left>Size:<just:right>" @ mCeil(%this.fileSize / 1000) @ "KB");

	if (%this.fo.isEOF()) {
		%this.fo.close();
		%this.fo.delete();
		%this.fo = "";
		return;
	} else
		%this.schedule(1, readFile);
}

function MPDownloadDlg::setupPlayers(%this) {
	MPDH_RestrictScroll.clear();

	%boxes = 0;

	for (%i = 0; %i < ClientGroup.getCount(); %i ++) {
		%client = ClientGroup.getObject(%i);
		if (%client.isHost())
			continue;

		MPDH_RestrictScroll.add(
		new GuiControl(MPDH_Box @ %i) {
			profile = "GuiDefaultProfile";
			horizSizing = "width";
			vertSizing = "bottom";
			position = "0" SPC(%boxes * 27);
			extent = "266 27";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			box = %i;
			client = %client;

			new GuiMLTextCtrl(MPDH_Name @ %i) {
				profile = "GuiMLTextProfile";
				horizSizing = "width";
				vertSizing = "bottom";
				position = "2 3";
				extent = "262 22";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				lineSpacing = "2";
				allowColorChars = "0";
				maxChars = "-1";
				box = %i;
			};
			new GuiCheckboxCtrl(MPDH_Allow @ %i) {
				profile = "PQCheckboxProfile";
				horizSizing = "left";
				vertSizing = "bottom";
				position = "191 0";
				extent = "75 27";
				minExtent = "8 8";
				visible = "1";
				command = "MPDownloadDlg.allow(" @ %i @ ");";
				helpTag = "0";
				text = "Allow";
				groupNum = "-1";
				buttonType = "ToggleButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				box = %i;
			};
		}
		);
		%boxes ++;
	}

	MPDH_RestrictScroll.resize(0, 0, 266, 27 * %boxes);

	%this.update();
}

function MPDownloadDlg::allow(%this, %box) {
	(MPDH_Box @ %box).client.canDownload[$MP::MissionFile] = (MPDH_Allow @ %box).getValue();
	commandToClient((MPDH_Box @ %box).client, 'CanDownloadMission', $MP::MissionFile, (MPDH_Allow @ %box).getValue());

	if (!(MPDH_Allow @ %box).getValue())
		MPDH_AllowAll.setValue(false);

	%this.update();
}

function MPDownloadDlg::update(%this) {
	//Prevent inf loops
	if (%this.updating)
		return;

	%this.updating = true;
	$MP::CanDownloadMission[$MP::MissionFile] = MPDH_Enable.getValue();

	for (%i = 0; %i < ClientGroup.getCount(); %i ++) {
		if (!isObject(MPDH_Box @ %i))
			continue;

		%client = (MPDH_Box @ %i).client;
		if (%client.isHost())
			continue;

		%color = "<color:";
		%status = "";
		if (%client.missionPassed[$MP::MissionFile]) {
			%color = %color @ "008822>";
			%status = "Already Has";
		} else if (%client.missionFailed[$MP::MissionFile]) {
			%color = %color @ "cc0000>";
			%status = "Conflict";
		} else
			%color = %color @ "000000>";

		(MPDH_Name @ %i).setText("<font:24><just:left>" @ %color @ %client.getDisplayName() @ "<just:right>" @ %status);

		(MPDH_Allow @ %i).setVisible(%status $= "");
		(MPDH_Allow @ %i).setActive($MP::CanDownloadMission[$MP::MissionFile]);
		(MPDH_Allow @ %i).setValue(%client.canDownload[$MP::MissionFile]);
	}

	MPDH_AllowAll.setActive($MP::CanDownloadMission[$MP::MissionFile]);
	%this.updating = false;
}

function MPDownloadDlg::allowAll(%this) {
	if (MPDH_AllowAll.getValue()) {
		for (%i = 0; %i < ClientGroup.getCount(); %i ++) {
			%client = ClientGroup.getObject(%i);
			if (%client.isHost())
				continue;

			%client.canDownload[$MP::MissionFile] = true;
			commandToClient(%client, 'CanDownloadMission', $MP::MissionFile, true);
		}
	}

	%this.update();
}

//-----------------------------------------------------------------------------
// Client Window
//-----------------------------------------------------------------------------

function MPDownloadDlg::startDownload(%this) {
	if ($GuiPack::Active) {
		$GuiPack::CurrentPack.MPDownloadDlg.startDownload();
		return;
	}
	commandToServer('RequestMissionFile', $MP::MissionFile);
	MPDC_Info.setText("<font:24><just:center>Starting Download");

	MPDC_Close.setActive(false);
	MPDC_Download.setActive(false);
}

function MPDownloadDlg::downloadStart(%this) {
	if ($GuiPack::Active) {
		$GuiPack::CurrentPack.MPDownloadDlg.downloadStart();
		return;
	}
	MPDC_Info.setText("<font:24><just:center>Starting Download");
}

function MPDownloadDlg::downloadFinish(%this) {
	if ($GuiPack::Active) {
		$GuiPack::CurrentPack.MPDownloadDlg.downloadFinish();
		return;
	}
	MPDC_Info.setText("<font:24><just:center>Download Finished");
	MPDC_Close.setActive(true);
	MPDC_Download.setActive(true);
}

function MPDownloadDlg::downloadError(%this) {
	if ($GuiPack::Active) {
		$GuiPack::CurrentPack.MPDownloadDlg.downloadError();
		return;
	}
	MPDC_Info.setText("<font:24><just:center>Error with Download");
	MPDC_Close.setActive(true);
	MPDC_Download.setActive(true);
}
