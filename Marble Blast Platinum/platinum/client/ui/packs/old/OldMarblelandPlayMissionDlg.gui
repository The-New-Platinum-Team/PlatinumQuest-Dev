//-----------------------------------------------------------------------------
// Copyright (c) 2024 The Platinum Team
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//-----------------------------------------------------------------------------

//--- OBJECT WRITE BEGIN ---
new GuiChunkedBitmapCtrl(OldMarblelandPlayMissionDlg) {
	profile = "GuiContentProfile";
	horizSizing = "width";
	vertSizing = "height";
	position = "0 0";
	extent = "800 600";
	minExtent = "8 8";
	visible = "1";
	helpTag = "0";
	bitmap = "./backgrounds/multi/8";
	useVariable = "0";
	tile = "0";
	games = "0";
	gamePos = "0 0";
	scoresPerPage = "5";

	new GuiControl() {
		profile = "GuiDefaultProfile";
		horizSizing = "width";
		vertSizing = "height";
		position = "0 0";
		extent = "800 600";
		minExtent = "8 8";
		visible = "1";
		helpTag = "0";

		new GuiBitmapCtrl(OldMPM_Box) {
			profile = "GuiDefaultProfile";
			horizSizing = "center";
			vertSizing = "center";
			position = "-80 -10";
			extent = "800 500";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			bitmap = "./offline/play/window";
			wrap = "0";

			new GuiBitmapButtonCtrl(OldMPM_difficulty) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "168 98";
				extent = "203 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.pushDifficulty();";
				helpTag = "0";
				text = "Custom";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/play/difficulty";

				new GuiMLTextCtrl(OldMPM_difficultyText) {
					profile = "GuiMLTextProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "20 10";
					extent = "203 22";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";

					new GuiButtonBaseCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "right";
						vertSizing = "bottom";
						position = "0 0";
						extent = "203 22";
						minExtent = "8 8";
						visible = "1";
						command = "OldMarblelandPlayMissionDlg.pushDifficulty();";
						helpTag = "0";
						text = "";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};
			};
			new GuiBitmapButtonCtrl() {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "119 325";
				extent = "92 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.back();";
				accelerator = "escape";
				helpTag = "0";
				text = "Main Menu";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/play/menu";
			};
			new GuiBitmapButtonCtrl(OldMPM_more) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "217 325";
				extent = "92 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.pushMore();";
				helpTag = "0";
				text = "More";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/play/more";
			};
			new GuiBitmapButtonCtrl(OldMPM_Search) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "315 325";
				extent = "43 43";
				minExtent = "8 8";
				visible = "1";
				command = "Canvas.pushDialog(OldSearchGui);";
				helpTag = "0";
				text = "Search";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/play/search";
					oldtooltip = "Search Levels";
			};
			new GuiBitmapButtonCtrl(OldMPM_SpeedToggle) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "364 325";
				extent = "43 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.toggleSpeed();";
				helpTag = "0";
				text = "Speed";
				groupNum = "-1";
				buttonType = "ToggleButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/marbleland/speed";
					oldtooltip = "Toggle Speed";
			};
			new GuiBitmapButtonCtrl(OldMPM_prev) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "436 325";
				extent = "72 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.setSelected(3);";
				accelerator = "left";
				helpTag = "0";
				text = "Previous";
				groupNum = "-1";
				buttonType = "RepeaterButton";
				repeatPeriod = "400";
				repeatDecay = "1";
				bitmap = "./offline/play/prev";
			};
			new GuiBitmapButtonCtrl(OldMPM_play) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "510 325";
				extent = "92 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.startMission();";
				accelerator = "enter";
				helpTag = "0";
				text = "Play!";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/play/play";
			};
			new GuiBitmapButtonCtrl(OldMPM_next) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "604 325";
				extent = "72 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.setSelected(5);";
				accelerator = "right";
				helpTag = "0";
				text = "Next";
				groupNum = "-1";
				buttonType = "RepeaterButton";
				repeatPeriod = "400";
				repeatDecay = "1";
				bitmap = "./offline/play/next";
			};
			new GuiBitmapCtrl(OldMPM_preview) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "429 96";
				extent = "256 194";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				bitmap = "~/data/missions_mbp/beginner/TrainingTowers";
				wrap = "0";

				new GuiBitmapCtrl() {
					profile = "GuiDefaultProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "0 0";
					extent = "256 194";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					bitmap = "./offline/play/levelframe";
					wrap = "0";
				};
			};
			new GuiBitmapCtrl(OldMPM_egg) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "657 253";
				extent = "14 21";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				bitmap = "./offline/play/eggfound";
				wrap = "0";
					oldtooltip = "Easter Egg Found";
			};
			new GuiMLTextCtrl(OldMPM_eggTime) {
				profile = "GuiMLTextProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "567 254";
				extent = "90 18";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				lineSpacing = "2";
				allowColorChars = "0";
				maxChars = "-1";
			};
			new GuiScrollCtrl(OldMPM_descriptionScroll) {
				profile = "GuiPhilScrollProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "110 145";
				extent = "325 146";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				willFirstRespond = "1";
				hScrollBar = "alwaysOff";
				vScrollBar = "dynamic";
				constantThumbHeight = "0";
				childMargin = "0 0";

				new GuiMLTextCtrl(OldMPM_description) {
					profile = "GuiMLTextProfile";
					horizSizing = "width";
					vertSizing = "bottom";
					position = "1 1";
					extent = "315 14";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";
				};
			};
			new GuiBitmapButtonCtrl(OldMPM_GlobalNext) {
				profile = "GuiDefaultProfile";
				horizSizing = "left";
				vertSizing = "bottom";
				position = "390 102";
				extent = "35 35";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.nextScorePage();";
				helpTag = "0";
				text = "Next";
				groupNum = "-1";
				buttonType = "RepeaterButton";
				repeatPeriod = "450";
				repeatDecay = "0.955";
				bitmap = "./offline/marbleland/scoresnext";
					oldtooltip = "Next 5";
			};
			new GuiBitmapButtonCtrl(OldMPM_GlobalPrev) {
				profile = "GuiDefaultProfile";
				horizSizing = "left";
				vertSizing = "bottom";
				position = "355 102";
				extent = "35 35";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.prevScorePage();";
				helpTag = "0";
				text = "Prev";
				groupNum = "-1";
				buttonType = "RepeaterButton";
				repeatPeriod = "450";
				repeatDecay = "0.955";
				bitmap = "./offline/marbleland/scoresprev";
					oldtooltip = "Previous 5";
			};
			new GuiMLTextCtrl(OldMPM_ParText) {
				profile = "GuiMLTextProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "110 292";
				extent = "320 14";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				lineSpacing = "2";
				allowColorChars = "0";
				maxChars = "-1";
			};
			new GuiMLTextCtrl(OldMPM_ScoreText) {
				profile = "GuiMLTextProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "441 292";
				extent = "235 14";
				minExtent = "8 8";
				visible = "1";
				helpTag = "0";
				lineSpacing = "2";
				allowColorChars = "0";
				maxChars = "-1";
			};
			new GuiButtonBaseCtrl(OldMPM_scoreButton) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "438 282";
				extent = "240 39";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.showScores();";
				helpTag = "0";
				text = "Scores";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
			};
			new GuiBitmapButtonCtrl(OldMPM_PlayAll) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "643 289";
				extent = "33 34";
				minExtent = "8 8";
				visible = "0";
				command = "OldMarblelandPlayMissionDlg.playPack();";
				helpTag = "0";
				text = "Play All";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/marbleland/playall";
					oldtooltip = "Play All";
			};
		};
	};
	new GuiControl(OldMPM_DifficultyPop) {
		profile = "GuiDefaultProfile";
		horizSizing = "width";
		vertSizing = "height";
		position = "0 0";
		extent = "800 600";
		minExtent = "8 8";
		visible = "0";
		helpTag = "0";

		new GuiButtonBaseCtrl() {
			profile = "GuiDefaultProfile";
			horizSizing = "width";
			vertSizing = "height";
			position = "0 0";
			extent = "800 600";
			minExtent = "8 8";
			visible = "1";
			command = "OldMarblelandPlayMissionDlg.popDifficulty();";
			helpTag = "0";
			text = "";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiButtonBaseCtrl() {
			profile = "GuiModelessDialogProfile";
			horizSizing = "center";
			vertSizing = "center";
			position = "-80 -10";
			extent = "800 500";
			minExtent = "8 8";
			visible = "1";
			command = "OldMarblelandPlayMissionDlg.popDifficulty();";
			helpTag = "0";
			text = "";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";

			new GuiBitmapButtonCtrl(OldMPM_difficulty_2) {
				profile = "OldMPMDifficultyButtonProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "168 98";
				extent = "203 43";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.popDifficulty();";
				helpTag = "0";
				text = "";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/play/difficulty";

				new GuiMLTextCtrl(OldMPM_difficultyText2) {
					profile = "GuiMLTextProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "20 10";
					extent = "203 22";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";

					new GuiButtonBaseCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "right";
						vertSizing = "bottom";
						position = "0 0";
						extent = "203 22";
						minExtent = "8 8";
						visible = "1";
						command = "OldMarblelandPlayMissionDlg.popDifficulty();";
						helpTag = "0";
						text = "";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};
			};
			new GuiButtonBaseCtrl() {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "-19 116";
				extent = "620 360";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.popDifficulty();";
				helpTag = "0";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
					menuColor = "brown";

				new GuiControl(OldMPM_DifficultyMenu) {
					profile = "GuiDefaultProfile";
					horizSizing = "width";
					vertSizing = "height";
					position = "0 0";
					extent = "620 360";
					minExtent = "29 29";
					visible = "1";
					helpTag = "0";

					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "right";
						vertSizing = "bottom";
						position = "100 0";
						extent = "49 45";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/tl";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "left";
						vertSizing = "bottom";
						position = "470 0";
						extent = "49 45";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/tr";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "right";
						vertSizing = "top";
						position = "100 298";
						extent = "49 62";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/bl";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "left";
						vertSizing = "top";
						position = "470 298";
						extent = "49 62";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/br";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "right";
						vertSizing = "height";
						position = "100 45";
						extent = "49 253";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/l";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "left";
						vertSizing = "height";
						position = "470 45";
						extent = "49 253";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/r";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "width";
						vertSizing = "top";
						position = "149 298";
						extent = "321 62";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/b";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "width";
						vertSizing = "height";
						position = "149 45";
						extent = "321 253";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/c";
						wrap = "0";
					};
					new GuiControl() {
						profile = "GuiDefaultProfile";
						horizSizing = "width";
						vertSizing = "bottom";
						position = "49 0";
						extent = "522 45";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";

						new GuiControl() {
							profile = "GuiDefaultProfile";
							horizSizing = "relative";
							vertSizing = "bottom";
							position = "100 0";
							extent = "139 45";
							minExtent = "8 8";
							visible = "1";
							helpTag = "0";

							new GuiBitmapCtrl() {
								profile = "GuiDefaultProfile";
								horizSizing = "width";
								vertSizing = "bottom";
								position = "0 0";
								extent = "127 45";
								minExtent = "8 8";
								visible = "1";
								helpTag = "0";
								bitmap = "./multiplayer/menu/brown/t";
								wrap = "1";
							};
							new GuiBitmapCtrl() {
								profile = "GuiDefaultProfile";
								horizSizing = "left";
								vertSizing = "bottom";
								position = "127 0";
								extent = "25 45";
								minExtent = "8 8";
								visible = "1";
								helpTag = "0";
								bitmap = "./multiplayer/menu/brown/tabt";
								wrap = "0";
							};
						};
						new GuiControl() {
							profile = "GuiDefaultProfile";
							horizSizing = "relative";
							vertSizing = "bottom";
							position = "238 0";
							extent = "184 45";
							minExtent = "8 8";
							visible = "1";
							helpTag = "0";

							new GuiBitmapCtrl() {
								profile = "GuiDefaultProfile";
								horizSizing = "right";
								vertSizing = "bottom";
								position = "-12 0";
								extent = "25 45";
								minExtent = "8 8";
								visible = "1";
								helpTag = "0";
								bitmap = "./multiplayer/menu/brown/tabt";
								wrap = "0";
							};
							new GuiBitmapCtrl() {
								profile = "GuiDefaultProfile";
								horizSizing = "width";
								vertSizing = "bottom";
								position = "13 0";
								extent = "171 45";
								minExtent = "8 8";
								visible = "1";
								helpTag = "0";
								bitmap = "./multiplayer/menu/brown/t";
								wrap = "1";
							};
						};
					};
					new GuiButtonBaseCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "width";
						vertSizing = "height";
						position = "0 0";
						extent = "620 360";
						minExtent = "29 29";
						visible = "1";
						command = "OldMarblelandPlayMissionDlg.popDifficulty();";
						helpTag = "0";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
							menuColor = "brown";
					};
				};
				new GuiControl() {
					profile = "GuiDefaultProfile";
					horizSizing = "width";
					vertSizing = "height";
					position = "49 45";
					extent = "522 253";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";

					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "left";
						vertSizing = "bottom";
						position = "404 29";
						extent = "12 12";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/divider-orange-r";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "right";
						vertSizing = "bottom";
						position = "103 29";
						extent = "12 12";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/divider-orange-l";
						wrap = "0";
					};
					new GuiBitmapCtrl() {
						profile = "GuiDefaultProfile";
						horizSizing = "width";
						vertSizing = "bottom";
						position = "115 29";
						extent = "289 12";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						bitmap = "./multiplayer/menu/brown/divider-orange-c";
						wrap = "0";
					};
					new GuiScrollCtrl() {
						profile = "OldGuiBacklessScrollProfile";
						horizSizing = "width";
						vertSizing = "height";
						position = "100 0";
						extent = "321 253";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						willFirstRespond = "1";
						hScrollBar = "alwaysOn";
						vScrollBar = "alwaysOff";
						constantThumbHeight = "0";
						childMargin = "0 0";

						new GuiControl(OldMPM_DifficultyButtons) {
							profile = "GuiDefaultProfile";
							horizSizing = "width";
							vertSizing = "height";
							position = "0 0";
							extent = "320 230";
							minExtent = "8 8";
							visible = "1";
							helpTag = "0";
						};
					};
				};
			};
		};
	};
	new GuiControl(OldMPM_MorePop) {
		profile = "GuiDefaultProfile";
		horizSizing = "width";
		vertSizing = "height";
		position = "0 0";
		extent = "800 600";
		minExtent = "8 8";
		visible = "0";
		helpTag = "0";

		new GuiButtonBaseCtrl() {
			profile = "GuiDefaultProfile";
			horizSizing = "width";
			vertSizing = "height";
			position = "0 0";
			extent = "800 600";
			minExtent = "8 8";
			visible = "1";
			command = "OldMarblelandPlayMissionDlg.popMore();";
			helpTag = "0";
			text = "";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
		};
		new GuiControl() {
			profile = "GuiModelessDialogProfile";
			horizSizing = "center";
			vertSizing = "center";
			position = "-80 -10";
			extent = "800 500";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";

			new GuiBitmapButtonCtrl() {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "117 204";
				extent = "286 146";
				minExtent = "8 8";
				visible = "1";
				command = "OldMarblelandPlayMissionDlg.popMore();";
				helpTag = "0";
				text = "";
				groupNum = "-1";
				buttonType = "PushButton";
				repeatPeriod = "1000";
				repeatDecay = "1";
				bitmap = "./offline/marbleland/moremenu";

				new GuiBitmapButtonCtrl(OldMPM_HintsButton) {
					profile = "GuiDefaultProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "50 46";
					extent = "43 43";
					minExtent = "8 8";
					visible = "1";
					command = "Canvas.pushDialog(OldHintsDlg);";
					helpTag = "0";
					text = "Hints";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					bitmap = "./offline/play/info";
				};

				new GuiBitmapButtonCtrl(OldMPM_MarbleSelect) {
					profile = "GuiDefaultProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "99 46";
					extent = "43 43";
					minExtent = "8 8";
					visible = "1";
					command = "Canvas.pushDialog(OldMarbleSelectGui);";
					helpTag = "0";
					text = "marble select";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					bitmap = "./offline/play/marble";
						oldtooltip = "Marble Select";
				};
				new GuiBitmapButtonCtrl(OldMPM_DeleteLevel) {
					profile = "GuiDefaultProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "148 46";
					extent = "43 43";
					minExtent = "8 8";
					visible = "1";
					command = "OldMarblelandPlayMissionDlg.deleteMission();";
					helpTag = "0";
					text = "delete";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					bitmap = "./offline/marbleland/delete";
						oldtooltip = "Delete level";
				};
				new GuiBitmapButtonCtrl(OldMPM_DemoButton) {
					profile = "GuiDefaultProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "197 46";
					extent = "43 43";
					minExtent = "8 8";
					visible = "1";
					variable = "$Game::Record";
					helpTag = "0";
					text = "demo";
					groupNum = "-1";
					buttonType = "ToggleButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					bitmap = "./offline/play/replay";
						oldtooltip = "Toggle Demo Recording";
				};
			};
		};
	};
};
//--- OBJECT WRITE END ---

//Marbleland level select

function OldMarblelandPlayMissionDlg::open(%this) {
	if ($MarblelandMissionList $= "") {
		MessageBoxOk("Please wait", "The custom level list has not been loaded yet, please wait...");
		if (!isObject(MarblelandJSONDownloader)) {
			marblelandDownloadMissionList();
		}
		if (!isObject(MarblelandPacksJSONDownloader)) {
			marblelandDownloadPackList();
		}
		return;
	}
	OldMPM_SpeedToggle.setValue(0);
	%this.toggleSpeed();
	Canvas.setContent(%this);
}

function OldMarblelandPlayMissionDlg::back(%this) {
	$CurrentGame = "";
	$MissionType = "";
	%this.missionIndex = 0;
	Canvas.setContent(OldMainMenuGui);
}

function OldMarblelandPlayMissionDlg::pushDifficulty(%this) {
	OldMPM_DifficultyPop.setVisible(true);
	OldMPM_difficulty.setVisible(false);
}

function OldMarblelandPlayMissionDlg::popDifficulty(%this) {
	OldMPM_DifficultyPop.setVisible(false);
	OldMPM_difficulty.setVisible(true);
}

function OldMarblelandPlayMissionDlg::pushMore(%this) {
	OldMPM_MorePop.setVisible(true);
}

function OldMarblelandPlayMissionDlg::popMore(%this) {
	OldMPM_MorePop.setVisible(false);
}

function OldMarblelandPlayMissionDlg::getMissionList(%this) {
	//Always marbleland
	return getMissionList("marbleland");
}

function OldMarblelandPlayMissionDlg::onWake(%this) {
	$PMG::CurrentGui = %this.getName();
	PlayMissionGui.ml = %this.getMissionList();
	marblelandReloadMissions();
	%this.scores = 0;
	if (%this.games == 0 || %this.mission $= "") {
		%this.buildDifficultySelector();
	}
	%this.setMissionTab(($CurrentGame !$= "" ? $CurrentGame : "Levels"), ($MissionType !$= "" ? $MissionType : "All"), (%this.missionIndex !$= "" ? %this.missionIndex : 0));
	setDiscordStatus("In Level Select");
	%this.setTickable(true);
}

function OldMarblelandPlayMissionDlg::setMissionTab(%this, %game, %cat, %index) {
	$CurrentGame = %game;
	$MissionType = %cat;
	%this.missionIndex = %index;
	%list = %this.getMissionList();
	%ml = %list.getMissionList($CurrentGame, $MissionType);
	if (!isObject(%ml) || %ml.getSize() == 0) {
		%list.buildMissionList($CurrentGame, $MissionType);
		%ml = %list.getMissionList($CurrentGame, $MissionType);	
	}
	if (!isObject(%ml) || %ml.getSize() == 0) {
		%list.buildMissionList("Levels", "All");
		%ml = %list.getMissionList("Levels", "All");
		$CurrentGame = "Levels";
		$MissionType = "All";
		%this.missionIndex = 0;
	}
	%this.globalPage = 0;
	%mission = %ml.getEntry(%index);
	%this.mission = %mission;
	$Menu::MissionFile = %mission.file;
	%this.updateDisplay();
	MarblelandGetScores(%mission.file, PMG_onMarbleLandScoresLoaded);
}

function OldMarblelandPlayMissionDlg::setSelected(%this, %index) {
	%this.missionIndex = %index;
	%this.globalPage = 0;
	%mission = %this.getMissionList().getMissionList($CurrentGame, $MissionType).getEntry(%index);
	%this.mission = %mission;
	$Menu::MissionFile = %mission.file;
	%this.updateDisplay();
	MarblelandGetScores(%mission.file, PMG_onMarbleLandScoresLoaded);
}

function OldMarblelandPlayMissionDlg::getMissionName(%this) {
	%name = "#" @ ($MissionType $= "Newest" ? %this.getMissionList().getMissionList($CurrentGame, $MissionType).getSize() - %this.missionIndex : %this.missionIndex + 1) @ ":" SPC upperFirst(%this.mission.name);
	if (%this.scores == 2 || %this.scores == 1)
		%name = clipPx("Marker Felt", 26, %name, 305, true);
	return %name;
}

function OldMarblelandPlayMissionDlg::updateDisplay(%this) {
	%list = %this.getMissionList();
	%ml = %list.getMissionList($CurrentGame, $MissionType);
	%mission = %this.mission;

	//Try to use the old button bitmaps, otherwise use the text control
	%difficultyName = %list.getDifficultyName($CurrentGame, $MissionType);
	%button = "platinum/client/ui/packs/old/offline/marbleland/" @ $MissionType;
	if (isBitmap(%button @ "_n")) {
		OldMPM_Difficulty.setBitmap(%button);
		OldMPM_difficulty_2.setBitmap(%button);
		OldMPM_difficultyText.setText("");
		OldMPM_difficultyText2.setText("");
		OldMPM_difficultyText.setVisible(false);
		OldMPM_difficultyText2.setVisible(false);
	} else {
		OldMPM_Difficulty.setBitmap("platinum/client/ui/packs/old/offline/play/difficulty");
		OldMPM_difficulty_2.setBitmap("platinum/client/ui/packs/old/offline/play/difficulty");
		OldMPM_difficultyText.setText(shadow("1 1", "0000007f") @ "<just:left><font:Marker Felt:24><color:FFFFFF>" @ clipPx("Marker Felt", 24, %difficultyName, 145, true));
		OldMPM_difficultyText2.setText(shadow("1 1", "0000007f") @ "<just:left><font:Marker Felt:24><color:FFFFFF>" @ clipPx("Marker Felt", 24, %difficultyName, 145, true));
		OldMPM_difficultyText.setVisible(true);
		OldMPM_difficultyText2.setVisible(true);
		OldMPM_difficultyText.setExtent(1 + min(textLen(%difficultyName, "Marker Felt", 24), 149) SPC "22");
		OldMPM_difficultyText2.setExtent(1 + min(textLen(%difficultyName, "Marker Felt", 24), 149) SPC "22");
	}

	OldMPM_difficulty.setPosition("168 98");
	OldMPM_difficulty_2.setPosition("168 98");

	OldMPM_GlobalPrev.setVisible(false);
	OldMPM_GlobalNext.setVisible(false);

	//Some levels use score0 and score1 (solo and vs times), score1 is displayed outside of multiplayer
	%score = %mission.score1 ? %mission.score1 : %mission.score;
	%platinumScore = %mission.platinumscore1 ? %mission.platinumscore1 : (%mission.platinumScore ? %mission.platinumScore : (%mission.goldScore1 ? %mission.goldScore1 : %mission.goldScore));
	%ultimateScore = %mission.ultimatescore1 ? %mission.ultimatescore1 : %mission.ultimateScore;
	%awesomeScore = %mission.awesomescore1 ? %mission.awesomescore1 : %mission.awesomeScore;

	OldMPM_ParText.setPosition("110 292");

	getBestTimes(%mission);
	%best = $hs[0];

	//Hack: Call this again because the top command fails for easter eggs...
	onNextFrame(getBestTimes, %mission);

	%mission.modification = "";
	%game = resolveMissionModification(getMissionInfo(%mission.file));
	%mission.modification = %game;

	%showGoldTime = (%game $= "Gold" || %game $= "Ultra") && %platinumScore $= "" && %mission.platinumTime $= "";
	%showAwesomeTime = ((((Unlock::getMissionCompletion(%mission) & $Completion::Awesome) == $Completion::Awesome) || $Unlock::DisplayAll) && %game !$= "Gold" && %game !$= "Ultra" && %game !$= "Platinum");

	if (%this.scores == 2 || %this.scores == 1) {
		%par = shadow("1 1", "0000007f") @ "<font:Marker Felt:20>";

		//Gold displays qualify time + gold time
		if ((%game $= "Gold") && !%mission.platinumTime && !%platinumScore && !%mission.ultimateTime && !%ultimateScore) {
			%par = %par @ "<just:left><color:ffe3e3>Qualify: <color:ffffff>" @ (%mission.time ? formatTime(%mission.time) : "N/A");
			%mbgQualify = true;
		}

		if (%mission.platinumTime || %mission.goldTime) {
			%platinum = formatTime(%mission.platinumTime ? %mission.platinumTime : %mission.goldTime);
		} else {
			%platinum = formatScore(%platinumScore);
		}
		if (%platinum $= "") {
			%platinum = "N/A";
		}

		if (%mission.ultimateTime) {
			%ultimate = formatTime(%mission.ultimateTime);
		} else {
			%ultimate = formatScore(%ultimateScore);
		}

		if (%mission.awesomeTime) {
			%awesome = formatTime(%mission.awesomeTime);
		} else {
			%awesome = formatScore(%awesomeScore);
		}

		if (!%showAwesomeTime || %mbgQualify) {
			%par = %par @ "<just:" @ (!%mbgQualify ? "left" : "right") @ "><color:ffe3e3>" @ (%showGoldTime ? "Gold: <color:FFFF00>" : "Platinum: <color:cccccc>") @ %platinum;
		}


		if (%ultimate $= "") {
			%ultimate = "N/A";
		}
		if (!%mbgQualify) {
			%par = %par @ "<just:" @ (%showAwesomeTime ? "left" : "right") @ "><color:ffe3e3>Ultimate: <color:FFCC33>" @ %ultimate;
		}


		if (%showAwesomeTime && !%mbgQualify) {
			%par = %par @ "<just:right><color:ffe3e3>Awesome: <color:FF4444>" @ %awesome;
		}

		OldMPM_ParText.setText(%par);
		OldMPM_descriptionScroll.setExtent("325 146");
	}

	if (%this.scores == 2) {
		%desc = shadow("1 1", "0000007f") @ "<font:Marker Felt:26><color:fdfefe><just:center>" @ %this.getMissionName() NL "<font:Marker Felt:26><color:fdfefe><just:center>Personal Scores:<tab:20>";

		for (%i = 0; %i < $Game::HighscoreCount; %i ++) {
			%desc = %desc NL "<font:Marker Felt:18><color:f4e4ce><just:left>";
			%type = getField($hs[%i], 0);
			%score = getField($hs[%i], 1);
			%name = getField($hs[%i], 2);
			%color = "FFFFFF";
			if (%type == $ScoreType::Time) {
				if (%showAwesomeTime && ((%score < %mission.awesomeTime && %mission.awesomeTime) || %awesomeScore)) {
					%color = "FF4444";
				} else if ((%score < %mission.ultimateTime && %mission.ultimateTime) || %ultimateScore) {
					%color = "FFCC33";
				} else if ((%score < %mission.platinumTime && %mission.platinumTime) || (%score < %mission.goldTime && %mission.goldTime) || %platinumScore) {
					%color = %showGoldTime ? "FFFF00" : "cccccc";
				}
			} else {
				if (%showAwesomeTime && %score >= %awesomeScore && %awesomeScore) {
					%color = "FF4444";
				} else if (%score >= %ultimateScore && %ultimateScore) {
					%color = "FFCC33";
				} else if (%score >= %platinumScore && %platinumScore) {
					%color = %showGoldTime ? "FFFF00" : "cccccc";
				}
			}
			%formatted = (%type == $ScoreType::Time ? formatTime(%score) : formatScore(%score));
			%desc = %desc @ (%i + 1) @ "." TAB clipPx("Marker Felt", 18, %name, 230, true) @ "<just:right><color:" @ %color @ ">" @ %formatted;
		}
		OldMPM_description.setText(%desc);

	} else if (%this.scores == 1) {
		%this.updateMissionScores();

	} else {
		if (ClientMode::callbackForMission(%mission, "timeMultiplier", 1) < 0) {
			OldMPM_descriptionScroll.setExtent("325 125"); //Resized to fit duration in
			%parTime = %score ? formatScore(%score) : "N/A";
			OldMPM_ParText.setPosition("110 272");
			OldMPM_ParText.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:24><just:center><color:ffe3e3>" @ (%game $= "Gold" ? "Qualify" : "Par") SPC "Score: <color:ffffff>" @ %parTime @ "\n<color:ffe3e3>Duration: <color:ffffff>" @ formatTime(%mission.time ? %mission.time : ClientMode::callbackForMission(%mission, "getStartTime", 300000)));
		} else {
			OldMPM_descriptionScroll.setExtent("325 146");
			%parTime = %mission.time ? formatTime(%mission.time) : "N/A";
			OldMPM_ParText.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:24><just:center><color:ffe3e3>" @ (%game $= "Gold" ? "Qualify" : "Par") SPC "Time: <color:ffffff>" @ %parTime);
		}

		OldMPM_description.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:26><color:fdfefe><just:center>" @ %this.getMissionName() NL shadow("1 1", "0000007f") @ "<font:Marker Felt:18><color:f4efe3><just:center>Author: " @ %mission.artist NL "<just:left><color:f4e4ce>" @ %mission.desc);
	}

	if (isBitmap("vfs://marbleland/prev-" @ %mission.id)) {
		OldMPM_preview.setBitmap("vfs://marbleland/prev-" @ %mission.id);
	} else if (isBitmap("vfs://marbleland/" @ %mission.id)) {
		OldMPM_preview.setBitmap("vfs://marbleland/" @ %mission.id @ ".jpg");
	} else {
		OldMPM_preview.setBitmap("platinum/client/ui/play/loadingicon.png");
		marblelandDownloadPreview(%mission.id, onOldMarblelandPreviewDownloaded, OldMPM_preview);
		//Some levels do not have previews, so try to download the icon as well
		marblelandDownloadIcon(%mission.id, "onOldDownloadIcon", OldMPM_preview);
	}

	%color = "FFFFFF";
	%bestScore = getField(%best, 1);
	%bestScoreType = getField(%best, 0);
	if (%bestScoreType == $ScoreType::Time) {
		if (%showAwesomeTime && (%bestScore < %mission.awesomeTime || %awesomeScore)) {
			%color = "FF4444";
		} else if (%mission.ultimateTime && %bestScore < %mission.ultimateTime || %ultimateScore) {
			%color = "FFCC33";
		} else if (%mission.platinumTime && %bestScore < %mission.platinumTime || %mission.goldTime && %bestScore < %mission.goldTime || %platinumScore) {
			%color = %showGoldTime ? "FFFF00" : "CCCCCC";
		}
	} else {
		if (%showAwesomeTime && %awesomeScore && %bestScore >= %awesomeScore) {
			%color = "FF4444";
		} else if (%ultimateScore && %bestScore >= %ultimateScore) {
			%color = "FFCC33";
		} else if (%platinumScore && %bestScore >= %platinumScore) {
			%color = %showGoldTime ? "FFFF00" : "CCCCCC";
		}
	}

	%next = %ml.getEntry(%this.missionIndex + 1);
	OldMPM_next.setActive(false);
	if (%next !$= "") {
		OldMPM_next.setActive(true);
		OldMPM_next.command = "OldMarblelandPlayMissionDlg.setSelected(" @ %this.missionIndex + 1 @ ");";
	}

	%prev = %ml.getEntry(%this.missionIndex - 1);
	OldMPM_prev.setActive(false);
	if (%prev !$= "") {
		OldMPM_prev.setActive(true);
		OldMPM_prev.command = "OldMarblelandPlayMissionDlg.setSelected(" @ %this.missionIndex - 1 @ ");";
	}

	if (%mission.easterEgg) {
		OldMPM_egg.setVisible(true);
		if ($hs["eggFound"]) {
			if (%game $= "PlatinumQuest") {
				OldMPM_egg.setBitmap("platinum/client/ui/play/egg_pq_get_ol");
			} else {
				OldMPM_egg.setBitmap("platinum/client/ui/packs/old/offline/play/eggfound");
			}
		} else {
			if (%game $= "PlatinumQuest") {
				OldMPM_egg.setBitmap("platinum/client/ui/play/egg_pq_notfound_ol");
			} else {
				OldMPM_egg.setBitmap("platinum/client/ui/packs/old/offline/play/eggnotfound");
			}
		} 
	} else {
		OldMPM_egg.setVisible(false);
	}
	if ($hs["eggFound"] && OldMPM_egg.isHover()) {
		%eggThemeColor = (%game $= "PlatinumQuest") ? "<color:cccc99>" : "<color:4580ff>";
		OldMPM_eggTime.setText("<font:Marker Felt:18><just:center>" @ %eggThemeColor @ formatTime(getField($hs["egg"], 0)));
		OldMPM_eggTime.setVisible(true);
	} else {
		OldMPM_eggTime.setText("");
		OldMPM_eggTime.setVisible(false);
	}

	%has = marblelandHasMission(%mission.id);
	OldMPM_PlayAll.setVisible($CurrentGame $= "Packs");
	OldMPM_DeleteLevel.setActive(%has);

	if (%mission.partial && %has)
		%mission = getMissionInfo(%mission.file, false);	
	OldMPM_HintsButton.setActive(!(%mission.generalHint $= "" && %mission.trivia $= "" && %mission.ultimateHint $= "" && %mission.awesomeHint $= "" && %mission.eggHint $= "" && %mission.eastereggHint $= ""));
}

function OldMarblelandPlayMissionDlg::updateMissionScores(%this) {
	if (%this.scores != 1) {
		return;
	}
	%mid = %this.mission.file;

	%scoreList = PlayMissionGui.globalScoreCache[%mid];
	%loading = PlayMissionGui.globalScoreCacheLoading[%mid];
	%failed = PlayMissionGui.globalScoreCacheFailed[%mid] || (%mid $= "");

	OldMPM_GlobalPrev.setVisible(true);
	OldMPM_GlobalNext.setVisible(true);

	%mission = %this.mission;

	%score = %mission.score1 ? %mission.score1 : %mission.score;
	%platinumScore = %mission.platinumscore1 ? %mission.platinumscore1 : (%mission.platinumScore ? %mission.platinumScore : (%mission.goldScore1 ? %mission.goldScore1 : %mission.goldScore));
	%ultimateScore = %mission.ultimatescore1 ? %mission.ultimatescore1 : %mission.ultimateScore;
	%awesomeScore = %mission.awesomescore1 ? %mission.awesomescore1 : %mission.awesomeScore;

	%game = resolveMissionModification(%mission);
	%showGoldTime = (%game $= "Gold" || %game $= "Ultra") && %platinumScore $= "" && %mission.platinumTime $= "";
	%showAwesomeTime = ((((Unlock::getMissionCompletion(%mission) & $Completion::Awesome) == $Completion::Awesome) || $Unlock::DisplayAll) && %game !$= "Gold" && %game !$= "Ultra" && %game !$= "Platinum");

	%scoresTitle = shadow("1 1", "0000007f") @ "<font:Marker Felt:26><color:fdfefe><just:center>" @ %this.getMissionName() NL "<font:Marker Felt:26><color:fdfefe><shadow:1:1><shadowcolor:0000007f><just:center>" @ "Global Best Times";

	if (isObject(%scoreList)) {
		%columns = %scoreList.columns;
		%rows = %scoreList.scores;

		if (%rows.getSize() == 0) {
			%text = %scoresTitle NL "" NL "<font:Marker Felt:18><color:f4e4ce><shadow:1:1><shadowcolor:0000007f><just:center>No scores! Be the first to beat this level!";

		} else {
			%start = %this.globalPage * %this.scoresPerPage;
			%count = min(%this.scoresPerPage, %rows.getSize() - %start);

			for (%i = %start; %i < (%start + %count); %i ++) {
				%row = %rows.getEntry(%i);
				%score = %row.getFieldValue("score");
				%isTime = %row.getFieldValue("score_type") $= "time";
				%placement = %row.getFieldValue("placement");

				if (%score $= "") {
					%score = %row.getFieldValue("time");
				}

				if (!%hasTime && %isTime) {
					%hasTime = true;
				}

				%color = "FFFFFF";
				if (%this.globalScoreMode $= "") {
					if (%isTime) {
						if (%showAwesomeTime && ((%score < %mission.awesomeTime && %mission.awesomeTime) || %awesomeScore)) {
							%color = "FF4444";
						} else if ((%score < %mission.ultimateTime && %mission.ultimateTime) || %ultimateScore) {
							%color = "FFCC33";
						} else if ((%score < %mission.platinumTime && %mission.platinumTime) || (%score < %mission.goldTime && %mission.goldTime) || %platinumScore) {
							%color = %showGoldTime ? "FFFF00" : "cccccc";
						}
					} else {
						if (%showAwesomeTime && %score >= %awesomeScore && %awesomeScore) {
							%color = "FF4444";
						} else if (%score >= %ultimateScore && %ultimateScore) {
							%color = "FFCC33";
						} else if (%score >= %platinumScore && %platinumScore) {
							%color = %showGoldTime ? "FFFF00" : "cccccc";
						}
					}
				}
				//World Record
				if (%placement == 1) {
					%color = "0060F0";
				}
				%color = "<color:" @ %color @ ">";

				%text = %text NL "<just:left><font:Marker Felt:18><color:f4e4ce><spush>" @ %placement @ "." SPC %row.getFieldValue("username") @ "<spop><just:right><spush>" @ %color @ (%isTime ? formatTime(%score) : formatScore(%score)) @ "<spop>";
			}
			%scoresTitle = shadow("1 1", "0000007f") @ "<font:Marker Felt:26><color:fdfefe><just:center>" @ %this.getMissionName() NL "<font:Marker Felt:26><color:fdfefe><just:center><shadow:1:1><shadowcolor:0000007f>Global Best" SPC (%hasTime ? "Times" : "Scores");
			%text = %scoresTitle @ %text;
		}

	} else if (%failed) {
		%text = %scoresTitle NL "" NL "<font:Marker Felt:18><color:f4e4ce><shadow:1:1><shadowcolor:0000007f><just:center>No scores! Be the first to beat this level!";
	} else {
		%text = shadow("1 1", "0000007f") @ "<font:Marker Felt:26><color:fdfefe><just:center>" @ %this.getMissionName() NL "<font:Marker Felt:26><color:fdfefe><shadow:1:1><shadowcolor:0000007f><just:center><just:center>Getting scores...";
	}

	OldMPM_difficulty.setPosition("142 98");
	OldMPM_difficulty_2.setPosition("142 98");

	OldMPM_GlobalPrev.setActive(isObject(%scoreList) && %this.globalPage > 0);
	OldMPM_GlobalNext.setActive(isObject(%scoreList) && (%this.globalPage + 1) * %this.scoresPerPage < %rows.getSize());

	OldMPM_description.setText(%text);
}

function OldMarblelandPlayMissionDlg::prevScorePage(%this) {
	%this.globalPage --;
	%this.updateMissionScores();
}

function OldMarblelandPlayMissionDlg::nextScorePage(%this) {
	%this.globalPage ++;
	%this.updateMissionScores();
}

function OldMarblelandPlayMissionDlg::showScores(%this) {
	%this.scores ++;
	if (%this.scores > 2)
		%this.scores = 0;
	%this.updateDisplay();
}

function OldMarblelandPlayMissionDlg::onScoreUpdate(%this) {
	if (lb()) {
		OldLBMarblelandPlayMissionDlg.updateMissionScores();
	} else if (%this.scores == 1) {
		%this.updateMissionScores();
	}
}

function onOldMarblelandPreviewDownloaded(%id, %success, %bmp) {
	if (%id !$= $PMG::CurrentGui.mission.id)
		return;
	if (%success) {
		%bmp.setBitmap("vfs://marbleland/prev-" @ %id @ ".jpg");
	}
}

function onOldDownloadIcon(%id, %success, %bmp) {
	if (%id !$= $PMG::CurrentGui.mission.id)
		return;
	if (isBitmap("vfs://marbleland/prev-" @ %id @ ".jpg"))
		return;
	if (%success) {
		%bmp.setBitmap("vfs://marbleland/" @ %id @ ".jpg");
	} else {
		%bmp.setBitmap("platinum/client/ui/play/missingicon");
	}
}

function OldMarblelandPlayMissionDlg::deleteMission(%this) {
	if ($Menu::CurrentlyLoadedMission $= %this.mission.file) {
		MessageBoxOK("Cannot Delete Mission", "You cannot delete a mission that is currently in use!");
	} else {
		marblelandDelete(%this.mission.id);
		OldMPM_DeleteLevel.setActive(false);

		if ($MissionType $= "Installed") {
			%this.getMissionList().buildMissionList("Levels", "Installed");
			%ml = %this.getMissionList().getMissionList($CurrentGame, $MissionType);
			%prev = %ml.getEntry(%this.missionIndex - 1);
			%next = %ml.getEntry(%this.missionIndex + 1);
			if (%prev !$= "") {
				%this.setMissionTab($CurrentGame, $MissionType, %this.missionIndex - 1);
			} else if (%next !$= "") {
				%this.setMissionTab($CurrentGame, $MissionType, %this.missionIndex + 1);
			} else {
				%this.setMissionTab("Levels", "All", 0);
			}
		}
	}
}

function OldMarblelandPlayMissionDlg::toggleSpeed(%this) {
	OldMPM_next.repeatPeriod = (OldMPM_SpeedToggle.getValue() ? ($pref::OldGui::MarblelandFastRepeatSpeed ? $pref::OldGui::MarblelandFastRepeatSpeed : "30") : ($pref::OldGui::MarblelandNormalRepeatSpeed ? $pref::OldGui::MarblelandNormalRepeatSpeed : "400"));
	OldMPM_prev.repeatPeriod = (OldMPM_SpeedToggle.getValue() ? ($pref::OldGui::MarblelandFastRepeatSpeed ? $pref::OldGui::MarblelandFastRepeatSpeed: "30") : ($pref::OldGui::MarblelandNormalRepeatSpeed ? $pref::OldGui::MarblelandNormalRepeatSpeed: "400"));
}

function OldMarblelandPlayMissionDlg::onTick(%this) {
	if (%this.scores == 1) {
		OldMPM_ScoreText.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:24><just:center><color:ffe3e3>Show Local Scores");
	} else if (%this.scores == 2) {
		OldMPM_ScoreText.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:24><just:center><color:ffe3e3>Show Description");
	} else {
		OldMPM_ScoreText.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:24><just:center><color:ffe3e3>Show Global Scores");
	}
	if ($hs["eggFound"] && OldMPM_egg.isHover()) {
		%game = resolveMissionModification(%this.mission);
		%eggThemeColor = (%game $= "PlatinumQuest") ? "<color:cccc99>" : "<color:4580ff>";
		OldMPM_eggTime.setText(shadow("1 1", "0000007f") @ "<font:Marker Felt:18><just:center>" @ %eggThemeColor @ formatTime(getField($hs["egg"], 0)));
		OldMPM_eggTime.setVisible(true);
	} else {
		OldMPM_eggTime.setText("");
		OldMPM_eggTime.setVisible(false);
	}
}

function OldMarblelandPlayMissionDlg::startMission(%this) {
	%mission = %this.mission;
	Canvas.setContent(OldLoadingGui);
	Canvas.repaint();
	menuLoadMission(%mission.file);
}

function OldMarblelandPlayMissionDlg::playPack(%this) {
	%queue = createDifficultyMissionQueue(%this.getMissionList(), $CurrentGame, $MissionType);
	menuPlayQueue(%queue);
}

function OldMarblelandPlayMissionDlg::addGame(%this, %game, %difficulties) {
	%name = getField(%game, 0);
	%display = getField(%game, 1);
	%xpos = getWord(%this.gamePos, 0);
	%length = 160;
	OldMPM_DifficultyButtons.add(new GuiTextCtrl("OldMPM_Game" @ %name) {
		profile = "OldPMDifficultyButtonProfile";
		horizSizing = "right";
		vertSizing = "bottom";
		position = %this.gamePos;
		extent = %length SPC "31";
		minExtent = "8 8";
		visible = "1";
		helpTag = "0";
		text = " " @ %display;
		maxLength = "255";
	});
	OldMPM_DifficultyButtons.add(new GuiScrollCtrl() {
		profile = "GuiPhilScrollProfile";
		horizSizing = "width";
		vertSizing = "height";
		position = %xpos SPC 42;
		extent = "151 186";
		minExtent = "8 8";
		visible = "1";
		helpTag = "0";
		willFirstRespond = "1";
		hScrollBar = "alwaysOff";
		vScrollBar = "alwaysOn";
		constantThumbHeight = "0";
		childMargin = "0 0";

		new GuiControl("OldMPM_GameList" @ %name) {
			profile = "GuiDefaultProfile";
			horizSizing = "width";
			vertSizing = "height";
			position = "0 0";
			extent = "151 186";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
		};
	});
	%container = "OldMPM_GameList" @ %name;
	%this.difficulties[%name] = 0;
	for (%i = 0; %i < getRecordCount(%difficulties); %i ++) {
		%difficulty = getRecord(%difficulties, %i);
		%difficultyName = getField(%difficulty, 0);
		%difficultyDisplay = getField(%difficulty, 1);
		%container.add(new GuiBitmapButtonTextCtrl("OldMPM_Difficulty" @ %name @ %difficultyName) {
			profile = "OldPMDifficultyButtonProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = 0 SPC %this.difficulties[%name] * 30;
			extent = "140 31";
			minExtent = "8 8";
			visible = "1";
			command = "OldMarblelandPlayMissionDlg.setMissionTab(\"" @ %name @ "\", \"" @ %difficultyName @ "\"); OldMarblelandPlayMissionDlg.popDifficulty();";
			helpTag = "0";
			text = " " @ clipPx("Marker Felt", 24, %difficultyDisplay, 135, true);
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/play/difficulty_highlight-120";
		});
		%this.difficulties[%name] ++;
	}
	%container.setExtent("150" SPC %this.difficulties[%name] * 31);
	%this.games ++;
	%this.gamePos = %xpos + %length SPC 0;
}

function OldMarblelandPlayMissionDlg::buildDifficultySelector(%this) {
	if (%this.games != 0)
		return;
	%ml = %this.getMissionList();
	%list = %ml.getGameList();
	//Resize the container first because doing it after will break stuff
	%l = 0;
	for (%i = 0; %i < getRecordCount(%list); %i ++) {
		%game = getRecord(%list, %i);
		%display = getField(%game, 1);
		%l += 160;
	}
	OldMPM_DifficultyButtons.setExtent(%l SPC 230);
	OldMPM_GameCustom.setPosition(%l - 220 SPC 0);
	OldMPM_directoryScroll.setPosition(%l - 220 SPC 47);
	for (%i = 0; %i < getRecordCount(%list); %i ++) {
		%game = getRecord(%list, %i);
		%name = getField(%game, 0);
		%difficulties = %ml.getDifficultyList(%name);
		%this.addGame(%game, %difficulties);
	}
}