//-----------------------------------------------------------------------------
// Copyright (c) 2024 The Platinum Team
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//-----------------------------------------------------------------------------

//--- OBJECT WRITE BEGIN ---
new GuiControl(OldMarbleSelectGui) {
	profile = "GuiDefaultProfile";
	horizSizing = "width";
	vertSizing = "height";
	position = "0 0";
	extent = "800 600";
	minExtent = "8 8";
	visible = "1";
	helpTag = "0";

	new GuiBitmapCtrl() {
		profile = "GuiDefaultProfile";
		horizSizing = "center";
		vertSizing = "center";
		position = "153 119";
		extent = "493 361";
		minExtent = "48 92";
		visible = "1";
		helpTag = "0";
		bitmap = "./offline/marbleSelect/marbleSelect.png";
		wrap = "0";

		new GuiBitmapButtonCtrl() {
			profile = "GuiButtonProfile";
			horizSizing = "center";
			vertSizing = "top";
			position = "199 270";
			extent = "95 45";
			minExtent = "8 8";
			visible = "1";
			command = "Canvas.PopDialog(OldMarbleSelectGui);";
			accelerator = "return";
			helpTag = "0";
			text = "OK";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/marbleSelect/select";
				simpleStyle = "0";
		};
		new GuiObjectView(OldMS_marbleViewer) {
			profile = "GuiDefaultProfile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "171 97";
			extent = "150 150";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			cameraZRot = "0";
			forceFOV = "0";
			skin = "base";
			cameraRotX = "0";
			cameraZRotSpeed = "0.001";
			orbitDistance = "1.4";
			autoSize = "0";
		};
		new GuiBitmapCtrl() {
			profile = "GuiDefaultProfile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "96 26";
			extent = "300 39";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			bitmap = "./offline/play/change_marble_text";
			wrap = "0";
		};
		new GuiMLTextCtrl(OldMS_CategoryText) {
			profile = "GuiComic24Profile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "140 67";
			extent = "213 27";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
		new GuiMLTextCtrl(OldMS_MarbleText) {
			profile = "GuiMLTextProfile";
			horizSizing = "center";
			vertSizing = "bottom";
			position = "86 245";
			extent = "320 24";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
		new GuiBitmapButtonCtrl(OldMS_Next) {
			profile = "GuiButtonProfile";
			horizSizing = "right";
			vertSizing = "top";
			position = "296 270";
			extent = "75 45";
			minExtent = "8 8";
			visible = "1";
			command = "OldmarbleSelectGui.next();";
			accelerator = "right";
			helpTag = "0";
			text = "Next";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/marbleSelect/next";
				simpleStyle = "0";
		};
		new GuiBitmapButtonCtrl(OldMS_Prev) {
			profile = "GuiButtonProfile";
			horizSizing = "right";
			vertSizing = "top";
			position = "123 270";
			extent = "75 45";
			minExtent = "8 8";
			visible = "1";
			command = "OldmarbleSelectGui.prev();";
			accelerator = "left";
			helpTag = "0";
			text = "Prev";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/marbleSelect/prev";
				simpleStyle = "0";
		};
		new GuiBitmapButtonCtrl(OldMS_PrevCat) {
			profile = "GuiButtonProfile";
			horizSizing = "right";
			vertSizing = "top";
			position = "37 270";
			extent = "85 45";
			minExtent = "8 8";
			visible = "1";
			command = "OldmarbleSelectGui.prevCat();";
			accelerator = "left";
			helpTag = "0";
			text = "Prev";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/marbleSelect/prevcat";
				simpleStyle = "0";
		};
		new GuiBitmapButtonCtrl(OldMS_NextCat) {
			profile = "GuiButtonProfile";
			horizSizing = "right";
			vertSizing = "top";
			position = "371 270";
			extent = "85 45";
			minExtent = "8 8";
			visible = "1";
			command = "OldmarbleSelectGui.nextCat();";
			accelerator = "left";
			helpTag = "0";
			text = "Prev";
			groupNum = "-1";
			buttonType = "PushButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/marbleSelect/nextcat";
				simpleStyle = "0";
		};
		new GuiBitmapButtonCtrl(OldMS_NormalSizeCheck) {
			profile = "GuiButtonProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "37 210";
			extent = "31 31";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			text = "Normal Size";
			groupNum = "-1";
			buttonType = "ToggleButton";
			repeatPeriod = "1000";
			repeatDecay = "1";
			bitmap = "./offline/LE/mess_chkbx";
		};
		new GuiMLTextCtrl(OldMS_NormalSizeText) {
			profile = "GuiMLTextProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "70 216";
			extent = "80 19";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
		};
	};
};
//--- OBJECT WRITE END ---

function OldMarbleSelectGui::onWake(%this) {
	OldMS_NormalSizeText.setText("<font:Marker Felt:18><color:FFFFFF><shadow:1:1><shadowcolor:0000007f>Normal Size");
	%this.loadPrefs();
}

function OldMarbleSelectGui::loadPrefs(%this) {
	if ($pref::marbleCategory $= "" || $pref::marbleIndex $= "") {
		$pref::marbleCategory = "PQ Classic";
		$pref::marbleIndex = 0;
		$pref::marbleNormalize = true;
	}
	if ($pref::marbleCategory $= "Official Marbles") {
		$pref::marbleCategory = "MBP Official";
	}

	%category  = $pref::marbleCategory;
	%marbleNum = $pref::marbleIndex;
	%normalize = $pref::marbleNormalize;

	OldMS_NormalSizeCheck.setValue(%normalize);
	MS_NormalSizeCheck.setValue(%normalize);

	echo("Marble select prefs:");
	echo("   Category: " @ %category);

	MarbleSelectDlg.category = %category;

	%list = MarbleSelectDlg.getMarbleList(%category);
	if (!isObject(%list)) {
		%this.selectCategory("MBP Official");
		ASSERT("Marble not Found!", "The previously selected custom marble was not found. The category it was in no longer exists.");
		return;
	}

	MarbleSelectDlg.categoryChoice = MarbleSelectDlg.lists.getIndex(%list);
	echo("   Category Index: " @ MarbleSelectDlg.categoryChoice);
	%this.selectCategory(%category);
	%list = MarbleSelectDlg.getMarbleList(%category);
	if (!isObject(%list)) {
		%this.selectCategory("MBP Official");
		ASSERT("Marble not Found!", "The previously selected custom marble was not found. The category it was in is inaccessible.");
		return;
	}

	%this.selectMarble(%marbleNum);
}

function OldMarbleSelectGui::getSelection(%this) {
	if (lb()) {
		return OldLBMarbleSelectionDlg.getSelection();
	}
	%list = MarbleSelectDlg.getMarbleList($pref::marbleCategory);

	%base = %list.base;

	%marble = %list.marbles.getEntry($pref::marbleIndex);

	%shapeName = %marble.shape;
	%shapeFile = %base @ "/" @ %shapeName;

	%shapeNormalSize = %marble.normalize;

	if (!%shapeNormalSize) {
		%shapeNormalSize = OldMS_NormalSizeCheck.getValue();
	}

	return %shapeFile TAB %marble.skin TAB %shapeNormalSize TAB %marble.shaderV TAB %marble.shaderF;
}

function OldMarbleSelectGui::onSleep(%this) {
	%this.savePrefs();
	savePrefs();
	if (isObject(ServerConnection)) {
		commandToServer('UpdateMarble', %this.getSelection());
	}
}

function OldMarbleSelectGui::savePrefs(%this) {
	$pref::marbleCategory  = MarbleSelectDlg.category;
	$pref::marbleIndex     = %this.marbleChoice;
	$pref::marbleNormalize = OldMS_NormalSizeCheck.getValue();
}

function OldMarbleSelectGui::update(%this) {
	OldMS_CategoryText.setText("<just:center><font:Marker Felt:28><color:FFFFFF><shadow:1:1><shadowcolor:0000007f>" @ upperFirst(MarbleSelectDlg.category));

	%list = MarbleSelectDlg.getMarbleList(MarbleSelectDlg.category);

	%marble = %list.marbles.getEntry(%this.marbleChoice);

	%base = %list.base;

	%shapeName = %marble.shape;
	%shapeFile = %base @ "/" @ %shapeName;

	%shapeSkin = %marble.skin;
	%shapeTitle = %marble.name;

	OldMS_NextCat.setVisible(MarbleSelectDlg.lists.getSize() > 1);
	OldMS_PrevCat.setVisible(MarbleSelectDlg.lists.getSize() > 1);

	if (isFile(%shapeFile)) {
		OldMS_MarbleViewer.setModel(%shapeFile, %shapeSkin);

		OldMS_MarbleText.setText("<just:center><font:Marker Felt:24><color:FFFFFF><shadow:1:1><shadowcolor:0000007f>" @ upperFirst(%shapeTitle));

		%normalize = %marble.normalize;
		OldMS_NormalSizeCheck.setVisible(!%normalize);
		OldMS_NormalSizetext.setVisible(!%normalize);
		MS_NormalSizeCheck.setVisible(!%normalize);
	} else {
		error("MarbleSelect :: Tried to set shapefile to" SPC %shapeFile SPC "but file does not exist.");
		OldMS_MarbleViewer.setEmpty();
	}
}

function OldMarbleSelectGui::selectMarble(%this, %marble) {
	%this.marbleChoice = %marble;
	MarbleSelectDlg.marbleChoice = %marble;
	%this.update();
	%this.savePrefs();
}

function OldMarbleSelectGui::selectCategory(%this, %category) {
	%list = MarbleSelectDlg.getMarbleList(%category);

	if (!isObject(%list)) {
		error("MarbleSelect :: Tried to set category" SPC %category SPC "but category does not exist.");
		return;
	}

	MarbleSelectDlg.category = %category;

	%this.selectMarble(0);
}

function OldMarbleSelectGui::next(%this) {
	%choice = %this.marbleChoice + 1;

	if (%choice >= MarbleSelectDlg.getMarbleList(MarbleSelectDlg.category).marbles.getSize())
		%choice = 0;

	%this.selectMarble(%choice);
}

function OldMarbleSelectGui::prev(%this) {
	%choice = %this.marbleChoice - 1;

	if (%choice < 0)
		%choice = MarbleSelectDlg.getMarbleList(MarbleSelectDlg.category).marbles.getSize() - 1;

	if (%choice < 0)
		%choice = 0;

	%this.selectMarble(%choice);
}

function OldMarbleSelectGui::nextCat(%this) {
	%choice = MarbleSelectDlg.categoryChoice + 1;

	if (%choice >= MarbleSelectDlg.lists.getSize())
		%choice = 0;

	MarbleSelectDlg.categoryChoice = %choice;

	%list = MarbleSelectDlg.lists.getEntry(%choice);

	%this.selectCategory(%list.name);
}

function OldMarbleSelectGui::prevCat(%this) {
	%choice = MarbleSelectDlg.categoryChoice - 1;

	if (%choice < 0)
		%choice = MarbleSelectDlg.lists.getSize() - 1;

	if (%choice < 0)
		%choice = 0;

	MarbleSelectDlg.categoryChoice = %choice;

	%list = MarbleSelectDlg.lists.getEntry(%choice);

	%this.selectCategory(%list.name);
}